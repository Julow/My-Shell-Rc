### This file is generated by opam2nix.

self:
let
    lib = self.lib;
    opam-commit = "4df269c79652dde3295181b3411ed0886f0a1f5d";
    pkgs = self.pkgs;
    repo = (pkgs.fetchFromGitHub) 
    {
      owner = "ocaml";
      repo = "opam-repository";
      rev = opam-commit;
      sha256 = "14jnbi7v9njlwp67lpl68lv1y8wc25nlslfl7w0an2pb0xrsbwff";
    };
    repoPath = self.repoPath;
    selection = self.selection;
in
{
  format-version = 4;
  ocaml-version = "4.08.1";
  opam-commit = opam-commit;
  selection = 
  {
    angstrom = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        bigstringaf = selection.bigstringaf;
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:192g8jhvw3nvipr5a4iljlgmfzjgh24yd1hm3ls63991vn52zd0y";
        package = "packages/angstrom/angstrom.0.13.0";
      };
      pname = "angstrom";
      src = pkgs.fetchurl 
      {
        sha256 = "08zbjixwkhrkbyhp2raap1b8ah502piwaadzydmb82ivgc6h94k7";
        url = "https://github.com/inhabitedtype/angstrom/archive/0.13.0.tar.gz";
      };
      version = "0.13.0";
    };
    asn1-combinators = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        bigarray-compat = selection.bigarray-compat;
        cstruct = selection.cstruct;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ptime = selection.ptime;
        stdlib-shims = selection.stdlib-shims;
        zarith = selection.zarith;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1bvkzph2gpzq8c94b0blgg8kgkqj9rg9s1zhxjbd2nbz9i4k5k29";
        package = "packages/asn1-combinators/asn1-combinators.0.2.2";
      };
      pname = "asn1-combinators";
      src = pkgs.fetchurl 
      {
        sha256 = "0c9n3nki3drjwn7yv2pg7nzyzsi409laq70830wh147hvvwxbsy9";
        url = "https://github.com/mirleft/ocaml-asn1-combinators/releases/download/v0.2.2/asn1-combinators-v0.2.2.tbz";
      };
      version = "0.2.2";
    };
    astring = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0y7bxwdmjwxzad2fhfsvzj3idw4sw4z2zb3n8yr4fkla9s9hbma9";
        package = "packages/astring/astring.0.8.3";
      };
      pname = "astring";
      src = pkgs.fetchurl 
      {
        sha256 = "0ixjwc3plrljvj24za3l9gy0w30lsbggp8yh02lwrzw61ls4cri0";
        url = "http://erratique.ch/software/astring/releases/astring-0.8.3.tbz";
      };
      version = "0.8.3";
    };
    base = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1pwpwm7kivzfmw0jaj3vs2w5gkfc5fyiyw2ajlavvdhd0vzfg4vi";
        package = "packages/base/base.v0.13.1";
      };
      pname = "base";
      src = pkgs.fetchurl 
      {
        sha256 = "0l3vcxz7f2kv6y2bjdwmwpmljh3m5xs9qk6c5222g6v64k3m1p7j";
        url = "https://github.com/janestreet/base/archive/v0.13.1.tar.gz";
      };
      version = "v0.13.1";
    };
    base-bigarray = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1hgfwxh4vdv21m2a4g506y27pcv912v67qi4svrn53rgc43ckv6b";
        package = "packages/base-bigarray/base-bigarray.base";
      };
      pname = "base-bigarray";
      src = null;
      version = "base";
    };
    base-bytes = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0a68lmbf68jgm1i3b59j2sc3ha9yhv4678f9mfwwvczw88prq7l3";
        package = "packages/base-bytes/base-bytes.base";
      };
      pname = "base-bytes";
      src = null;
      version = "base";
    };
    base-threads = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1c4bpyh61ampjgk5yh3inrgcpf1z1xv0pshn54ycmpn4dyzv0p2x";
        package = "packages/base-threads/base-threads.base";
      };
      pname = "base-threads";
      src = null;
      version = "base";
    };
    base-unix = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0mpsvb7684g723ylngryh15aqxg3blb7hgmq2fsqjyppr36iyzwg";
        package = "packages/base-unix/base-unix.base";
      };
      pname = "base-unix";
      src = null;
      version = "base";
    };
    base64 = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        base-bytes = selection.base-bytes;
        bos = selection.bos or null;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        rresult = selection.rresult or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0ipgmb0bghmh3svszlpzlsy1b7j084gh818pwqic4dh42w3g3nlb";
        package = "packages/base64/base64.3.4.0";
      };
      pname = "base64";
      src = pkgs.fetchurl 
      {
        sha256 = "0d0n5gd4nkdsz14jnxq13f1f7rzxmndg5xql039a8wfppmazd70w";
        url = "https://github.com/mirage/ocaml-base64/releases/download/v3.4.0/base64-v3.4.0.tbz";
      };
      version = "3.4.0";
    };
    bigarray-compat = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0lbmlg7kqy0bvca7v5qib69ayiryy5hlkzhzfg7qwq9n29aygc97";
        package = "packages/bigarray-compat/bigarray-compat.1.0.0";
      };
      pname = "bigarray-compat";
      src = pkgs.fetchurl 
      {
        sha256 = "1bpmmnxb1yx72aqlbdaqfl18rgz1cq9cf6cqvnfl88mz5dfr4x0d";
        url = "https://github.com/mirage/bigarray-compat/archive/v1.0.0.tar.gz";
      };
      version = "1.0.0";
    };
    bigstringaf = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        bigarray-compat = selection.bigarray-compat;
        dune = selection.dune;
        mirage-xen-posix = selection.mirage-xen-posix or null;
        ocaml = selection.ocaml;
        ocaml-freestanding = selection.ocaml-freestanding or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1nh5w6smffl95c6h1ha5k4w83hzh20cwwl272nl56lwwyhx3wyiv";
        package = "packages/bigstringaf/bigstringaf.0.6.1";
      };
      pname = "bigstringaf";
      src = pkgs.fetchurl 
      {
        sha256 = "0nc9cxc2hf1qklkwl3mn46yrsjwdlv9j1824v2nagj3d021ys52s";
        url = "https://github.com/inhabitedtype/bigstringaf/archive/0.6.1.tar.gz";
      };
      version = "0.6.1";
    };
    calendar = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0cgvvj8dkw7sb9d9wvflampswqll7875gdrjc4kd4hxsr3b8sy0b";
        package = "packages/calendar/calendar.2.04";
      };
      pname = "calendar";
      src = pkgs.fetchurl 
      {
        sha256 = "1xyrsh7x47qyhh5nyvj08wkjn3mrkrfb9ff2yfq5873s6fhgm9my";
        url = "https://download.ocamlcore.org/calendar/calendar/2.04/calendar-2.04.tar.gz";
      };
      version = "2.04";
    };
    cmdliner = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:05qlm4yp6124w2z10dpdchldfrmgmcr6h31rnxp8qs8mk0xzx48z";
        package = "packages/cmdliner/cmdliner.1.0.4";
      };
      pname = "cmdliner";
      src = pkgs.fetchurl 
      {
        sha256 = "1h04q0zkasd0mw64ggh4y58lgzkhg6yhzy60lab8k8zq9ba96ajw";
        url = "http://erratique.ch/software/cmdliner/releases/cmdliner-1.0.4.tbz";
      };
      version = "1.0.4";
    };
    cohttp = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        base64 = selection.base64;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        fmt = selection.fmt or null;
        jsonm = selection.jsonm;
        ocaml = selection.ocaml;
        ppx_fields_conv = selection.ppx_fields_conv;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        re = selection.re;
        sexplib0 = selection.sexplib0;
        stdlib-shims = selection.stdlib-shims;
        stringext = selection.stringext;
        uri = selection.uri;
        uri-sexp = selection.uri-sexp;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0gn5xnaaaqp7mpki9c8751nmhbrq08h0nhqjdqrijjy8vbqx0rwl";
        package = "packages/cohttp/cohttp.2.5.1";
      };
      pname = "cohttp";
      src = pkgs.fetchurl 
      {
        sha256 = "0im91mi3nxzqfd7fs5r0zg5gsparfnf5zaz13mpw247hkd3y3396";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v2.5.1/cohttp-v2.5.1.tbz";
      };
      version = "2.5.1";
    };
    cohttp-lwt = 
    {
      opamInputs = 
      {
        cohttp = selection.cohttp;
        dune = selection.dune;
        logs = selection.logs;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1qcmrhsq1j1babhw0kyigql29y4yb38gziydma59yy31wvxll3y9";
        package = "packages/cohttp-lwt/cohttp-lwt.2.5.1";
      };
      pname = "cohttp-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0im91mi3nxzqfd7fs5r0zg5gsparfnf5zaz13mpw247hkd3y3396";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v2.5.1/cohttp-v2.5.1.tbz";
      };
      version = "2.5.1";
    };
    cohttp-lwt-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        cmdliner = selection.cmdliner;
        cohttp-lwt = selection.cohttp-lwt;
        conduit-lwt-unix = selection.conduit-lwt-unix;
        dune = selection.dune;
        fmt = selection.fmt;
        logs = selection.logs;
        lwt = selection.lwt;
        magic-mime = selection.magic-mime;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0an32kz3zni1jigdxxwc1zy1icc3vsyllzdqbvimxaws5gl8szr0";
        package = "packages/cohttp-lwt-unix/cohttp-lwt-unix.2.5.1";
      };
      pname = "cohttp-lwt-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "0im91mi3nxzqfd7fs5r0zg5gsparfnf5zaz13mpw247hkd3y3396";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v2.5.1/cohttp-v2.5.1.tbz";
      };
      version = "2.5.1";
    };
    colombe = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        angstrom = selection.angstrom;
        base64 = selection.base64;
        crowbar = selection.crowbar or null;
        domain-name = selection.domain-name;
        dune = selection.dune;
        fmt = selection.fmt;
        hxd = selection.hxd;
        ipaddr = selection.ipaddr;
        logs = selection.logs;
        mrmime = selection.mrmime or null;
        ocaml = selection.ocaml;
        rresult = selection.rresult;
        tls = selection.tls;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:15mghms3vyixraj177hmp1vk0wb0b07xlklg9f5d3h9v80js9pc0";
        package = "packages/colombe/colombe.0.1.0";
      };
      pname = "colombe";
      src = pkgs.fetchurl 
      {
        sha256 = "1iipfm06bini52j0pb0daww4a5sv07djdb66mc3rxr3xg27hbqbp";
        url = "https://github.com/dinosaure/colombe/releases/download/v0.1.0/colombe-v0.1.0.tbz";
      };
      version = "0.1.0";
    };
    conduit = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        ipaddr-sexp = selection.ipaddr-sexp;
        logs = selection.logs;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib = selection.sexplib;
        uri = selection.uri;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1273jf18632hb4z1mvmlxcikbw22wm5khdwg5f0ldsjk9h61lm3m";
        package = "packages/conduit/conduit.2.0.2";
      };
      pname = "conduit";
      src = pkgs.fetchurl 
      {
        sha256 = "1lhxkpxmnpiz6m6bw3yzf86r0bbmbx1plcc8sx308zlcv4p3f415";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v2.0.2/conduit-v2.0.2.tbz";
      };
      version = "2.0.2";
    };
    conduit-lwt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conduit = selection.conduit;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib = selection.sexplib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:115jjl137ap5id62y83gkq6i2xgw9x0dg2mqffrl7asq105axkx4";
        package = "packages/conduit-lwt/conduit-lwt.2.0.2";
      };
      pname = "conduit-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1lhxkpxmnpiz6m6bw3yzf86r0bbmbx1plcc8sx308zlcv4p3f415";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v2.0.2/conduit-v2.0.2.tbz";
      };
      version = "2.0.2";
    };
    conduit-lwt-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conduit-lwt = selection.conduit-lwt;
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        ipaddr-sexp = selection.ipaddr-sexp;
        launchd = selection.launchd or null;
        lwt = selection.lwt;
        lwt_ssl = selection.lwt_ssl or null;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        tls = selection.tls or null;
        uri = selection.uri;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:06pm91z57rzvmfk968w4rdy8pr5ijrk0qlvg1yqw91cvscqwcha0";
        package = "packages/conduit-lwt-unix/conduit-lwt-unix.2.0.2";
      };
      pname = "conduit-lwt-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "1lhxkpxmnpiz6m6bw3yzf86r0bbmbx1plcc8sx308zlcv4p3f415";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v2.0.2/conduit-v2.0.2.tbz";
      };
      version = "2.0.2";
    };
    conf-gmp = 
    {
      buildInputs = [ (pkgs.gmp or null) (pkgs.gmp-dev or null)
                       (pkgs.gmp-devel or null) (pkgs.libgmp-dev or null) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0a8ph62kvn3b7q6phczgs6gacw2gya6xiiw6wc6fms3qyn0r5gbc";
        package = "packages/conf-gmp/conf-gmp.1";
      };
      pname = "conf-gmp";
      src = null;
      version = "1";
    };
    conf-libssl = 
    {
      buildInputs = [ (pkgs.openssl) ];
      opamInputs = 
      {
        conf-pkg-config = selection.conf-pkg-config;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1my8nwvzdij7ndlqmiish0gzy0gbyh61rnkhf9qnqm7mxkqd368y";
        package = "packages/conf-libssl/conf-libssl.1";
      };
      pname = "conf-libssl";
      src = null;
      version = "1";
    };
    conf-m4 = 
    {
      buildInputs = [ (pkgs.m4) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jlhg718lz35jyr5w0sgvg5ycplhnd8653rc4980yci8p3z1vlxs";
        package = "packages/conf-m4/conf-m4.1";
      };
      pname = "conf-m4";
      src = null;
      version = "1";
    };
    conf-perl = 
    {
      buildInputs = [ (pkgs.perl) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:090hjg76q1q651vwh38k0jmmr8mp465m7bfgnw5aqxpv1kxb4f12";
        package = "packages/conf-perl/conf-perl.1";
      };
      pname = "conf-perl";
      src = null;
      version = "1";
    };
    conf-pkg-config = 
    {
      buildInputs = [ (pkgs.pkgconfig) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1ry1p9pa5478ikngpyp45mk69yvih84f9m4dlsv9rvrb3k0dkiq8";
        package = "packages/conf-pkg-config/conf-pkg-config.1.1";
      };
      pname = "conf-pkg-config";
      src = null;
      version = "1.1";
    };
    containers = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        base-unix = selection.base-unix or null;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        gen = selection.gen or null;
        iter = selection.iter or null;
        mdx = selection.mdx or null;
        ocaml = selection.ocaml;
        odoc = selection.odoc or null;
        ounit = selection.ounit or null;
        qcheck = selection.qcheck or null;
        qtest = selection.qtest or null;
        seq = selection.seq;
        uutf = selection.uutf or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1pgkc2lkrwcyr585l1zaz1mdnq70nfkq9lm0by34mlj03xlaz4r9";
        package = "packages/containers/containers.2.8.1";
      };
      pname = "containers";
      src = pkgs.fetchurl 
      {
        sha256 = "1yjbpsh7da7vgqpqrwlfbgpk9248f26w6355ha7vqhb5blxkh0qn";
        url = "https://github.com/c-cube/ocaml-containers/archive/v2.8.1.tar.gz";
      };
      version = "2.8.1";
    };
    cppo = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hdl429cpb4bg9gc07rxs14p7d3r3nfi3vw6s38c6xhf412nl611";
        package = "packages/cppo/cppo.1.6.6";
      };
      pname = "cppo";
      src = pkgs.fetchurl 
      {
        sha256 = "185q0x54id7pfc6rkbjscav8sjkrg78fz65rgfw7b4bqlyb2j9z7";
        url = "https://github.com/ocaml-community/cppo/releases/download/v1.6.6/cppo-v1.6.6.tbz";
      };
      version = "1.6.6";
    };
    cpuid = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1k2l7zn9dgyyg7h2x45xbq04hsq4700hmibzyif8l2pkil6lqkdy";
        package = "packages/cpuid/cpuid.0.1.2";
      };
      pname = "cpuid";
      src = pkgs.fetchurl 
      {
        sha256 = "08ng4mva6qblb5ipkrxbr0my7ndkc4qwcbswkqgbgir864s74m93";
        url = "https://github.com/pqwy/cpuid/releases/download/v0.1.2/cpuid-v0.1.2.tbz";
      };
      version = "0.1.2";
    };
    cstruct = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        bigarray-compat = selection.bigarray-compat;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:02qc5jzryd2az68bz0kf04jlxlc46rj0yxd1wd3yiwyi42xqi88w";
        package = "packages/cstruct/cstruct.5.1.1";
      };
      pname = "cstruct";
      src = pkgs.fetchurl 
      {
        sha256 = "1wzy15x5ra0v3l3rww6iamnv05za58wfvicrwkz74y2zp0ng9lam";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v5.1.1/cstruct-v5.1.1.tbz";
      };
      version = "5.1.1";
    };
    cstruct-lwt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        cstruct = selection.cstruct;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0wk46xbxjm0n8ajly7myasbk9fb53fvcwgp15wxbg67w9phyf05m";
        package = "packages/cstruct-lwt/cstruct-lwt.5.1.1";
      };
      pname = "cstruct-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1wzy15x5ra0v3l3rww6iamnv05za58wfvicrwkz74y2zp0ng9lam";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v5.1.1/cstruct-v5.1.1.tbz";
      };
      version = "5.1.1";
    };
    cstruct-sexp = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        cstruct = selection.cstruct;
        dune = selection.dune;
        ocaml = selection.ocaml;
        sexplib = selection.sexplib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1ngz2y083wnk4v2d01vgbl236m88wxzs27qqvr4mc6n483v2n2dh";
        package = "packages/cstruct-sexp/cstruct-sexp.5.1.1";
      };
      pname = "cstruct-sexp";
      src = pkgs.fetchurl 
      {
        sha256 = "1wzy15x5ra0v3l3rww6iamnv05za58wfvicrwkz74y2zp0ng9lam";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v5.1.1/cstruct-v5.1.1.tbz";
      };
      version = "5.1.1";
    };
    domain-name = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        astring = selection.astring;
        dune = selection.dune;
        fmt = selection.fmt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1243f92lmszqdf9qvh1v6wv3jd9r5k2h1fhbqqfw9j3imjdfhw0a";
        package = "packages/domain-name/domain-name.0.3.0";
      };
      pname = "domain-name";
      src = pkgs.fetchurl 
      {
        sha256 = "12kc9p2a2fi1ipc2hyhbzivxpph3npglxwdgvhd6v20rqqdyvnad";
        url = "https://github.com/hannesm/domain-name/releases/download/v0.3.0/domain-name-v0.3.0.tbz";
      };
      version = "0.3.0";
    };
    dune = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        ocaml = selection.ocaml or null;
        ocamlfind-secondary = selection.ocamlfind-secondary or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:12007y9vhx1xc6xjwbwrdn8mjzmmp3fg0bp9jcxy8sdg6ahfxlhn";
        package = "packages/dune/dune.2.4.0";
      };
      pname = "dune";
      src = pkgs.fetchurl 
      {
        sha256 = "096wp6aawgh1ffhbnjfxgakwqd02kfkz2i6m6cc040w1g554iw98";
        url = "https://github.com/ocaml/dune/releases/download/2.4.0/dune-2.4.0.tbz";
      };
      version = "2.4.0";
    };
    dune-configurator = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        dune-private-libs = selection.dune-private-libs;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0zzsjn80rk562ass6wax9cy0yn0rmk9cvgcvsizj7h316azsvrvf";
        package = "packages/dune-configurator/dune-configurator.2.4.0";
      };
      pname = "dune-configurator";
      src = pkgs.fetchurl 
      {
        sha256 = "096wp6aawgh1ffhbnjfxgakwqd02kfkz2i6m6cc040w1g554iw98";
        url = "https://github.com/ocaml/dune/releases/download/2.4.0/dune-2.4.0.tbz";
      };
      version = "2.4.0";
    };
    dune-private-libs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1hadqlz3jb9xvav6ja05gsjp9hjaq62j46kaf3s5m09xpqgms20a";
        package = "packages/dune-private-libs/dune-private-libs.2.4.0";
      };
      pname = "dune-private-libs";
      src = pkgs.fetchurl 
      {
        sha256 = "096wp6aawgh1ffhbnjfxgakwqd02kfkz2i6m6cc040w1g554iw98";
        url = "https://github.com/ocaml/dune/releases/download/2.4.0/dune-2.4.0.tbz";
      };
      version = "2.4.0";
    };
    fieldslib = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1abs881bnis5xj93jv7xg34cyph5jj683g2apas4sgi8k1wkg1iz";
        package = "packages/fieldslib/fieldslib.v0.13.0";
      };
      pname = "fieldslib";
      src = pkgs.fetchurl 
      {
        sha256 = "07bpb1bi5rlim7lfkfd5m2k7n222grslbzh9hjpy7dhq7nm8fy0p";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/fieldslib-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    fmt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix or null;
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        seq = selection.seq;
        stdlib-shims = selection.stdlib-shims;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jv1qj26idvi2nazvna4aaclp9wzlzwmmg57n5cx2f9ia87qh267";
        package = "packages/fmt/fmt.0.8.8";
      };
      pname = "fmt";
      src = pkgs.fetchurl 
      {
        sha256 = "1iy0rwknd302mr15328g805k210xyigxbija6fzqqfzyb43azvk4";
        url = "https://erratique.ch/software/fmt/releases/fmt-0.8.8.tbz";
      };
      version = "0.8.8";
    };
    fpath = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:02mwg1qqjia4jdmp65zhyxssn4rxb6a22s4g3pjh3p5z9v900pja";
        package = "packages/fpath/fpath.0.7.2";
      };
      pname = "fpath";
      src = pkgs.fetchurl 
      {
        sha256 = "1hr05d8bpqmqcfdavn4rjk9rxr7v2zl84866f5knjifrm60sxqic";
        url = "http://erratique.ch/software/fpath/releases/fpath-0.7.2.tbz";
      };
      version = "0.7.2";
    };
    gmap = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        fmt = selection.fmt or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0pliwm7xynn6a810zg2ywp1nxwqjs9y7akx5lslhk4h63j41i5ac";
        package = "packages/gmap/gmap.0.3.0";
      };
      pname = "gmap";
      src = pkgs.fetchurl 
      {
        sha256 = "073wa0lrb0jj706j87cwzf1a8d1ff14100mnrjs8z3xc4ri9xp84";
        url = "https://github.com/hannesm/gmap/releases/download/0.3.0/gmap-0.3.0.tbz";
      };
      version = "0.3.0";
    };
    hxd = 
    {
      opamInputs = 
      {
        angstrom = selection.angstrom;
        base-bigarray = selection.base-bigarray;
        base-bytes = selection.base-bytes;
        base-unix = selection.base-unix;
        cmdliner = selection.cmdliner;
        dune = selection.dune;
        fmt = selection.fmt;
        fpath = selection.fpath;
        ocaml = selection.ocaml;
        rresult = selection.rresult;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1fc7n7lkja7dzsfdjjia1iilv7pnnivf6ipb5sywjl0ahinzbaly";
        package = "packages/hxd/hxd.0.1.0";
      };
      pname = "hxd";
      src = pkgs.fetchurl 
      {
        sha256 = "1nzh9ynsyr85rrhqnjikn08ay36mgbv0mp0mj7ayxs21jhpxa2ha";
        url = "https://github.com/dinosaure/hxd/releases/download/v0.1.0/hxd-v0.1.0.tbz";
      };
      version = "0.1.0";
    };
    ipaddr = 
    {
      opamInputs = 
      {
        domain-name = selection.domain-name;
        dune = selection.dune;
        macaddr = selection.macaddr;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0m6v710hdhra2jr04hypkg9l5msnnbzr862cyiayvdj7bz2infhv";
        package = "packages/ipaddr/ipaddr.4.0.0";
      };
      pname = "ipaddr";
      src = pkgs.fetchurl 
      {
        sha256 = "0agwb4dy5agwviz4l7gpv280g1wcgfl921k1ykfwq80b46fbyjkg";
        url = "https://github.com/mirage/ocaml-ipaddr/releases/download/v4.0.0/ipaddr-v4.0.0.tbz";
      };
      version = "4.0.0";
    };
    ipaddr-sexp = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        ipaddr-cstruct = selection.ipaddr-cstruct or null;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:06l5w0l7pc5c8s6jlrpsaasyymgqmgii77yvjjp22ij9k0lf7l24";
        package = "packages/ipaddr-sexp/ipaddr-sexp.4.0.0";
      };
      pname = "ipaddr-sexp";
      src = pkgs.fetchurl 
      {
        sha256 = "0agwb4dy5agwviz4l7gpv280g1wcgfl921k1ykfwq80b46fbyjkg";
        url = "https://github.com/mirage/ocaml-ipaddr/releases/download/v4.0.0/ipaddr-v4.0.0.tbz";
      };
      version = "4.0.0";
    };
    jsonm = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
        uchar = selection.uchar;
        uutf = selection.uutf;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0dj8ibg6j4r4a7v7g6d6q3h4m23jv3pxwc7nam4zzbc7h2k69dy9";
        package = "packages/jsonm/jsonm.1.0.1";
      };
      pname = "jsonm";
      src = pkgs.fetchurl 
      {
        sha256 = "1176dcmxb11fnw49b7yysvkjh0kpzx4s48lmdn5psq9vshp5c29w";
        url = "http://erratique.ch/software/jsonm/releases/jsonm-1.0.1.tbz";
      };
      version = "1.0.1";
    };
    lambdasoup = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        markup = selection.markup;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1zd2r2nqyk6mhzc7fs130xn0qjzp9drj4cz1vcwjjj7gzr7dn7a1";
        package = "packages/lambdasoup/lambdasoup.0.7.0";
      };
      pname = "lambdasoup";
      src = pkgs.fetchurl 
      {
        sha256 = "1miaramcsah16qaqy1v1avgdh2w4bpmffr310k5x1463wm9aashl";
        url = "https://github.com/aantron/lambdasoup/archive/0.7.0.tar.gz";
      };
      version = "0.7.0";
    };
    logs = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        cmdliner = selection.cmdliner or null;
        fmt = selection.fmt or null;
        js_of_ocaml = selection.js_of_ocaml or null;
        lwt = selection.lwt or null;
        mtime = selection.mtime or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1k797gb7f2s1hlqyqsq2xyq9gm20l5q2iwh26bs44f3bp3gklg1a";
        package = "packages/logs/logs.0.7.0";
      };
      pname = "logs";
      src = pkgs.fetchurl 
      {
        sha256 = "1jnmd675wmsmdwyb5mx5b0ac66g4c6gpv5s4mrx2j6pb0wla1x46";
        url = "https://erratique.ch/software/logs/releases/logs-0.7.0.tbz";
      };
      version = "0.7.0";
    };
    lwt = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        base-unix = selection.base-unix or null;
        conf-libev = selection.conf-libev or null;
        cppo = selection.cppo;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        mmap = selection.mmap;
        ocaml = selection.ocaml;
        ocplib-endian = selection.ocplib-endian;
        result = selection.result;
        seq = selection.seq;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:12b4c7g849l63i3i3lsngbdf97m9ipadr103zm5mbjka72gxqm8r";
        package = "packages/lwt/lwt.5.2.0";
      };
      pname = "lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0cmim5s7ay72pxpc66bmxmnj5lbg5yvm0ydrpnfh3nyhlcyjphcp";
        url = "https://github.com/ocsigen/lwt/archive/5.2.0.tar.gz";
      };
      version = "5.2.0";
    };
    lwt_ppx = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_tools_versioned = selection.ppx_tools_versioned;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0f22rsa2rgv23wmx1bgfzj4qjl2apqnpq6sh2dx393hw065m6whr";
        package = "packages/lwt_ppx/lwt_ppx.2.0.1";
      };
      pname = "lwt_ppx";
      src = pkgs.fetchurl 
      {
        sha256 = "0cmim5s7ay72pxpc66bmxmnj5lbg5yvm0ydrpnfh3nyhlcyjphcp";
        url = "https://github.com/ocsigen/lwt/archive/5.2.0.tar.gz";
      };
      version = "2.0.1";
    };
    lwt_ssl = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ssl = selection.ssl;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0ix6qqsxca3fmfhf6x91q2nv1safa71d0xw6rlhiy7njpp9dqaii";
        package = "packages/lwt_ssl/lwt_ssl.1.1.3";
      };
      pname = "lwt_ssl";
      src = pkgs.fetchurl 
      {
        sha256 = "0dxxkif4a667ndk14sn8ka4x4gck0gvw4sc12jb84rcq5k15jlkp";
        url = "https://github.com/ocsigen/lwt_ssl/archive/1.1.3.tar.gz";
      };
      version = "1.1.3";
    };
    macaddr = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1dm8ykic9j29d8phlf0irs66swjj6cvyd8g8xalw6382nhpf3a8v";
        package = "packages/macaddr/macaddr.4.0.0";
      };
      pname = "macaddr";
      src = pkgs.fetchurl 
      {
        sha256 = "0agwb4dy5agwviz4l7gpv280g1wcgfl921k1ykfwq80b46fbyjkg";
        url = "https://github.com/mirage/ocaml-ipaddr/releases/download/v4.0.0/ipaddr-v4.0.0.tbz";
      };
      version = "4.0.0";
    };
    magic-mime = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0d8ici4l55iywi80a5rp2mhzni1ppp16vb9f4zsml1898cd92p7l";
        package = "packages/magic-mime/magic-mime.1.1.2";
      };
      pname = "magic-mime";
      src = pkgs.fetchurl 
      {
        sha256 = "1sq4rfd9m3693cnzlbds4qh1xpvrv1iz1s1f75nvacbmfjy0nn8c";
        url = "https://github.com/mirage/ocaml-magic-mime/releases/download/v1.1.2/magic-mime-v1.1.2.tbz";
      };
      version = "1.1.2";
    };
    markup = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        uchar = selection.uchar;
        uutf = selection.uutf;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0wa9bk2yqrqcl7ha7ywlbrlvd6nri5rkd3b6a7b27dj7hwlh064q";
        package = "packages/markup/markup.0.8.2";
      };
      pname = "markup";
      src = pkgs.fetchurl 
      {
        sha256 = "05yxfnl56clx5s2iyxrw7xj64c998kzz47280kvv49x7r1gzp6qs";
        url = "https://github.com/aantron/markup.ml/archive/0.8.2.tar.gz";
      };
      version = "0.8.2";
    };
    mirage-no-solo5 = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:18h50v7lp39sis6jy46h35vij0v1z5fr76c4y2h4b72c40fwwck1";
        package = "packages/mirage-no-solo5/mirage-no-solo5.1";
      };
      pname = "mirage-no-solo5";
      src = null;
      version = "1";
    };
    mirage-no-xen = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1nvmvay3nkl8ljw9f46dwv3jppqbbkp0pxf9f1gq4spckb8ysmkh";
        package = "packages/mirage-no-xen/mirage-no-xen.1";
      };
      pname = "mirage-no-xen";
      src = null;
      version = "1";
    };
    mmap = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0mjn2jxrfwlrzppjnc6pg47ncm0ri6a1hn3kj2yz10rmpca25bsm";
        package = "packages/mmap/mmap.1.1.0";
      };
      pname = "mmap";
      src = pkgs.fetchurl 
      {
        sha256 = "0l6waidal2n8mkdn74avbslvc10sf49f5d889n838z03pra5chsc";
        url = "https://github.com/mirage/mmap/releases/download/v1.1.0/mmap-v1.1.0.tbz";
      };
      version = "1.1.0";
    };
    nocrypto = 
    {
      opamInputs = 
      {
        cpuid = selection.cpuid;
        cstruct = selection.cstruct;
        cstruct-lwt = selection.cstruct-lwt;
        lwt = selection.lwt;
        mirage-entropy = selection.mirage-entropy or null;
        mirage-no-solo5 = selection.mirage-no-solo5 or null;
        mirage-no-xen = selection.mirage-no-xen or null;
        mirage-solo5 = selection.mirage-solo5 or null;
        mirage-xen = selection.mirage-xen or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        ocb-stubblr = selection.ocb-stubblr;
        ounit = selection.ounit or null;
        ppx_deriving = selection.ppx_deriving;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib = selection.sexplib;
        topkg = selection.topkg;
        zarith = selection.zarith;
        zarith-freestanding = selection.zarith-freestanding or null;
        zarith-xen = selection.zarith-xen or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hvg7q9pczk982ki77ck0di50468p93xpav1jr5gw8dl9pbhali9";
        package = "packages/nocrypto/nocrypto.0.5.4-2";
      };
      pname = "nocrypto";
      src = pkgs.fetchurl 
      {
        sha256 = "0zshi9hlhcz61n5z1k6fx6rsi0pl4xgahsyl2jp0crqkaf3hqwlg";
        url = "https://github.com/mirleft/ocaml-nocrypto/releases/download/v0.5.4/nocrypto-0.5.4.tbz";
      };
      version = "0.5.4-2";
    };
    num = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1x42ndx4shcwgn4c63h57j27bs08y8pyn4sqiizwl47bkcwhq1gj";
        package = "packages/num/num.1.3";
      };
      pname = "num";
      src = pkgs.fetchurl 
      {
        sha256 = "0kg96f7zapbb8hy6n9c53snwqs4rn5xvbdf5nb2m75gah47c6yag";
        url = "https://github.com/ocaml/num/archive/v1.3.tar.gz";
      };
      version = "1.3";
    };
    ocaml = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-config = selection.ocaml-config;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1f2v07fzx7rg0lc8pzs1s24vp49y0jyfxf98b9z57giik28dafgp";
        package = "packages/ocaml/ocaml.4.08.1";
      };
      pname = "ocaml";
      src = null;
      version = "4.08.1";
    };
    ocaml-base-compiler = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1gh1552rac1r3zzw1b7z0776walapin07bk0bpg8j561b4kwcb46";
        package = "packages/ocaml-base-compiler/ocaml-base-compiler.4.08.1";
      };
      pname = "ocaml-base-compiler";
      src = pkgs.fetchurl 
      {
        sha256 = "11fvsm861lr73lk181gl5iczprp8d83fvgc1q6dx8gxqhzad6gmm";
        url = "https://github.com/ocaml/ocaml/archive/4.08.1.tar.gz";
      };
      version = "4.08.1";
    };
    ocaml-compiler-libs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:13l8hnv1xclgpayfv8w827ly7il87j4qll7x15sbdrqk980c3jyg";
        package = "packages/ocaml-compiler-libs/ocaml-compiler-libs.v0.12.1";
      };
      pname = "ocaml-compiler-libs";
      src = pkgs.fetchurl 
      {
        sha256 = "014shj6g10xmclfps22igkiij5jysn8p6lv75h0s4vzjj9wj23yj";
        url = "https://github.com/janestreet/ocaml-compiler-libs/archive/v0.12.1.tar.gz";
      };
      version = "v0.12.1";
    };
    ocaml-config = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0g5s0yysgqdrbgx7vyh56fhx59xypw6hdwlcbzbqcgvj4zp4yy0c";
        package = "packages/ocaml-config/ocaml-config.1";
      };
      pname = "ocaml-config";
      src = null;
      version = "1";
    };
    ocaml-migrate-parsetree = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_derivers = selection.ppx_derivers;
        result = selection.result;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1x93nkwdv3a5i5i3ak9k32xf14z20frn3vzb0is47gnhdsz5jgm3";
        package = "packages/ocaml-migrate-parsetree/ocaml-migrate-parsetree.1.6.0";
      };
      pname = "ocaml-migrate-parsetree";
      src = pkgs.fetchurl 
      {
        sha256 = "0gz39m4c4cbpza3sjfh4dfxlxf17r7bpqaxqq1zy2k0i4myqw0cv";
        url = "https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v1.6.0/ocaml-migrate-parsetree-v1.6.0.tbz";
      };
      version = "1.6.0";
    };
    ocamlbuild = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hrzb4fgz7qh7cr65j5yq6fai82fhyl6bp8s9pwcj1a2yhczbviv";
        package = "packages/ocamlbuild/ocamlbuild.0.14.0";
      };
      pname = "ocamlbuild";
      src = pkgs.fetchurl 
      {
        sha256 = "0y1fskw9rg2y1zgb7whv3v8v4xw04svgxslf3856q2aqd7lrrcl7";
        url = "https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz";
      };
      version = "0.14.0";
    };
    ocamlfind = 
    {
      opamInputs = 
      {
        conf-m4 = selection.conf-m4;
        graphics = selection.graphics or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:04z3rq1y20wfzmwvjm9wlg89cqqs8n37inhbwp4x2dsqbn0hqd81";
        package = "packages/ocamlfind/ocamlfind.1.8.1";
      };
      pname = "ocamlfind";
      src = pkgs.fetchurl 
      {
        sha256 = "00s3sfb02pnjmkax25pcnljcnhcggiliccfz69a72ic7gsjwz1cf";
        url = "http://download.camlcity.org/download/findlib-1.8.1.tar.gz";
      };
      version = "1.8.1";
    };
    ocb-stubblr = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1lsn82a3pfnl0hwng4nxd9kyrn6dlj05anlxf1vkvi12qj4yfbhq";
        package = "packages/ocb-stubblr/ocb-stubblr.0.1.1-1";
      };
      pname = "ocb-stubblr";
      src = pkgs.fetchurl 
      {
        sha256 = "167b7x1j21mkviq8dbaa0nmk4rps2ilvzwx02igsc2706784z72f";
        url = "https://github.com/pqwy/ocb-stubblr/releases/download/v0.1.1/ocb-stubblr-0.1.1.tbz";
      };
      version = "0.1.1-1";
    };
    ocplib-endian = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cppo = selection.cppo;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1nb8z88xhnbz324q14ydlbw8pnrsk5qr3lw34hv0i7bhd9hgk8y9";
        package = "packages/ocplib-endian/ocplib-endian.1.0";
      };
      pname = "ocplib-endian";
      src = pkgs.fetchurl 
      {
        sha256 = "0hwj09rnzjs0m0kazz5h2mgs6p95j0zlga8cda5srnzqmzhniwkn";
        url = "https://github.com/OCamlPro/ocplib-endian/archive/1.0.tar.gz";
      };
      version = "1.0";
    };
    parsexp = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0cw5wn470zqir9vhn9zp2d5glax6ygfmrz25j2ihx8i2m21pvwaa";
        package = "packages/parsexp/parsexp.v0.13.0";
      };
      pname = "parsexp";
      src = pkgs.fetchurl 
      {
        sha256 = "0m144jj63nmw4j88gbmrmkfr3f5bciln00gz1n13h61s6rzz01nq";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/parsexp-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_cstruct = 
    {
      opamInputs = 
      {
        cppo = selection.cppo or null;
        cstruct = selection.cstruct;
        cstruct-sexp = selection.cstruct-sexp or null;
        cstruct-unix = selection.cstruct-unix or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
        ppx_tools_versioned = selection.ppx_tools_versioned;
        sexplib = selection.sexplib;
        stdlib-shims = selection.stdlib-shims;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0mvlch57pv3fcf4lh93ph2fb2nbhx9b789spks5wigi48srzhi81";
        package = "packages/ppx_cstruct/ppx_cstruct.5.1.1";
      };
      pname = "ppx_cstruct";
      src = pkgs.fetchurl 
      {
        sha256 = "1wzy15x5ra0v3l3rww6iamnv05za58wfvicrwkz74y2zp0ng9lam";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v5.1.1/cstruct-v5.1.1.tbz";
      };
      version = "5.1.1";
    };
    ppx_derivers = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0r8rjp4m5jfbf3wz8qlgh82pxjws4arjwxhqq0zjglby6l6h8p3x";
        package = "packages/ppx_derivers/ppx_derivers.1.2.1";
      };
      pname = "ppx_derivers";
      src = pkgs.fetchurl 
      {
        sha256 = "159vqy616ni18mn0dlv8c2y4h7mb4hahwjn53yrr59yyhzhmwndn";
        url = "https://github.com/ocaml-ppx/ppx_derivers/archive/1.2.1.tar.gz";
      };
      version = "1.2.1";
    };
    ppx_deriving = 
    {
      opamInputs = 
      {
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ounit = selection.ounit or null;
        ppx_derivers = selection.ppx_derivers;
        ppx_tools = selection.ppx_tools;
        ppxfind = selection.ppxfind;
        result = selection.result;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1cby569w4dzxwzi7pqrar8p4mqphcjap7xl5v4dl8q1fkvaf4rbp";
        package = "packages/ppx_deriving/ppx_deriving.4.4.1";
      };
      pname = "ppx_deriving";
      src = pkgs.fetchurl 
      {
        sha256 = "0bvyfmrc8qbpc3vbnji0f2al7qayb8vi282zfx44zz148xvmgg17";
        url = "https://github.com/ocaml-ppx/ppx_deriving/archive/v4.4.1.tar.gz";
      };
      version = "4.4.1";
    };
    ppx_fields_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:15piy3665gkqvingvphjm51hvskqxhfx1yazrl5qik48y4gwfcf2";
        package = "packages/ppx_fields_conv/ppx_fields_conv.v0.13.0";
      };
      pname = "ppx_fields_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "03j9vmbs60ivga1w2qcnjn2d149yzkns2q341ni3qqa570lcwzsj";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_fields_conv-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_sexp_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0vd5bins4dhwnp8w552vafshsqj1gm9hna5y0xxpf9bqhkvr1426";
        package = "packages/ppx_sexp_conv/ppx_sexp_conv.v0.13.0";
      };
      pname = "ppx_sexp_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "0yppy47zjn8nb73lnk4d3lhpmcia1rr8bka56n32sla4yz1y148n";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_sexp_conv-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_tools = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1934nsmpkwiw78j1xx3six8plhca1w8zphd4ca26bs73gg1zp3d4";
        package = "packages/ppx_tools/ppx_tools.6.0+4.08.0";
      };
      pname = "ppx_tools";
      src = pkgs.fetchurl 
      {
        sha256 = "131gfw7h25bsid7rq1d6p0b42wi4lmr119ifawfd1sccqqwdhcyn";
        url = "https://github.com/ocaml-ppx/ppx_tools/archive/6.0+4.08.0.tar.gz";
      };
      version = "6.0-4.08.0";
    };
    ppx_tools_versioned = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1dsc28dw0xk77rh1cng5mv9ygygg2dh72kw95lhcyhf3xkpk4nrr";
        package = "packages/ppx_tools_versioned/ppx_tools_versioned.5.3.0";
      };
      pname = "ppx_tools_versioned";
      src = pkgs.fetchurl 
      {
        sha256 = "0s3msxk8g728hnylbizjlp5q37j285dqd37p377a1wh73316ib5i";
        url = "https://github.com/ocaml-ppx/ppx_tools_versioned/releases/download/5.3.0/ppx_tools_versioned-5.3.0.tbz";
      };
      version = "5.3.0";
    };
    ppxfind = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0f77frl6knjcsnjpfn1miha19dg658m37f9ffl96ql00cx8ba9ds";
        package = "packages/ppxfind/ppxfind.1.4";
      };
      pname = "ppxfind";
      src = pkgs.fetchurl 
      {
        sha256 = "0wa9vcrc26kirc2cqqs6kmarbi8gqy3dgdfiv9y7nzsgy1liqacq";
        url = "https://github.com/diml/ppxfind/releases/download/1.4/ppxfind-1.4.tbz";
      };
      version = "1.4";
    };
    ppxlib = 
    {
      opamInputs = 
      {
        base = selection.base;
        cinaps = selection.cinaps or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-compiler-libs = selection.ocaml-compiler-libs;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ocamlfind = selection.ocamlfind or null;
        ppx_derivers = selection.ppx_derivers;
        stdio = selection.stdio;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:19911d2z7dxrhn0bagj74iq1q1hvhg97kal536vngabm3b8njcng";
        package = "packages/ppxlib/ppxlib.0.12.0";
      };
      pname = "ppxlib";
      src = pkgs.fetchurl 
      {
        sha256 = "0hiciacp34zxm9lhgdlx8rf3h2w5j3w236bj31rpfl4k7fdjqmkb";
        url = "https://github.com/ocaml-ppx/ppxlib/archive/0.12.0.tar.gz";
      };
      version = "0.12.0";
    };
    ptime = 
    {
      opamInputs = 
      {
        js_of_ocaml = selection.js_of_ocaml or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0ldzn2jmz8c3n9rr4mqyfa92lkb3378cmik3klznbln7lsf4fa1v";
        package = "packages/ptime/ptime.0.8.5";
      };
      pname = "ptime";
      src = pkgs.fetchurl 
      {
        sha256 = "1fxq57xy1ajzfdnvv5zfm7ap2nf49znw5f9gbi4kb9vds942ij27";
        url = "https://erratique.ch/software/ptime/releases/ptime-0.8.5.tbz";
      };
      version = "0.8.5";
    };
    re = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        seq = selection.seq;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:10m5h5myw3pnjvk7z1j7hhx18zpbm7kad2196ljgvj7y169zba61";
        package = "packages/re/re.1.9.0";
      };
      pname = "re";
      src = pkgs.fetchurl 
      {
        sha256 = "1gas4ky49zgxph3870nffzkr6y41kkpqp4nj38pz1gh49zcf12aj";
        url = "https://github.com/ocaml/ocaml-re/releases/download/1.9.0/re-1.9.0.tbz";
      };
      version = "1.9.0";
    };
    result = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1c7lw8dbchllz3rl801xwpm82r427vnrv7b7kqh0gwjglya50y28";
        package = "packages/result/result.1.5";
      };
      pname = "result";
      src = pkgs.fetchurl 
      {
        sha256 = "0cpfp35fdwnv3p30a06wd0py3805qxmq3jmcynjc3x2qhlimwfkw";
        url = "https://github.com/janestreet/result/releases/download/1.5/result-1.5.tbz";
      };
      version = "1.5";
    };
    rresult = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:10vaq82rzip2rn1rbq27pjckvqassjh1n58pnsypldqaahxnbca6";
        package = "packages/rresult/rresult.0.6.0";
      };
      pname = "rresult";
      src = pkgs.fetchurl 
      {
        sha256 = "1k69a3gvrk7f2cshwjzvk7818f0bwxhacgd14wxy6d4gmrggci86";
        url = "http://erratique.ch/software/rresult/releases/rresult-0.6.0.tbz";
      };
      version = "0.6.0";
    };
    rss_to_mail = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        calendar = selection.calendar;
        cmdliner = selection.cmdliner;
        cohttp-lwt-unix = selection.cohttp-lwt-unix;
        colombe = selection.colombe;
        containers = selection.containers;
        dune = selection.dune;
        lambdasoup = selection.lambdasoup;
        logs = selection.logs;
        lwt = selection.lwt;
        lwt_ppx = selection.lwt_ppx;
        lwt_ssl = selection.lwt_ssl;
        markup = selection.markup;
        ocaml = selection.ocaml;
        sendmail-lwt = selection.sendmail-lwt;
        tyxml = selection.tyxml;
        tyxml-ppx = selection.tyxml-ppx;
        uri = selection.uri;
        x509 = selection.x509;
        xmlm = selection.xmlm;
      };
      opamSrc = "rss_to_mail.opam";
      pname = "rss_to_mail";
      src = self.directSrc "rss_to_mail";
      version = "dev";
    };
    sendmail = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        colombe = selection.colombe;
        crowbar = selection.crowbar or null;
        dune = selection.dune;
        mrmime = selection.mrmime or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:179zfd2jrb6qiyc30r25nw5y1qgkvmi4qynz4rjfsa41n7dpqwk3";
        package = "packages/sendmail/sendmail.0.1.0";
      };
      pname = "sendmail";
      src = pkgs.fetchurl 
      {
        sha256 = "1iipfm06bini52j0pb0daww4a5sv07djdb66mc3rxr3xg27hbqbp";
        url = "https://github.com/dinosaure/colombe/releases/download/v0.1.0/colombe-v0.1.0.tbz";
      };
      version = "0.1.0";
    };
    sendmail-lwt = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        crowbar = selection.crowbar or null;
        domain-name = selection.domain-name;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        sendmail = selection.sendmail;
        tls = selection.tls;
        x509 = selection.x509;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1mwbjph64p3nh80lxqn2ccjwqmdyfzim3x86x86bkqsl4aavbj5w";
        package = "packages/sendmail-lwt/sendmail-lwt.0.1.0";
      };
      pname = "sendmail-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1iipfm06bini52j0pb0daww4a5sv07djdb66mc3rxr3xg27hbqbp";
        url = "https://github.com/dinosaure/colombe/releases/download/v0.1.0/colombe-v0.1.0.tbz";
      };
      version = "0.1.0";
    };
    seq = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1vm8mk6zm2q3fwnkprl6jib048zr4ysldw0bl74x6wwbxj0vx6k9";
        package = "packages/seq/seq.base";
      };
      pname = "seq";
      src = null;
      version = "base";
    };
    sexplib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        num = selection.num;
        ocaml = selection.ocaml;
        parsexp = selection.parsexp;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0az4i6jnc9xc5y1ki7ihzd7g6d6vgwi7r2ih6j45ypx5zlmydv81";
        package = "packages/sexplib/sexplib.v0.13.0";
      };
      pname = "sexplib";
      src = pkgs.fetchurl 
      {
        sha256 = "0sfn9i7wydphkqg3156ck0wlibj9mm8w3j52jrgh2qgqgwq3h13v";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/sexplib-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    sexplib0 = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jvzjhd83ik7siqhjfsrvx9vbbcq5qykix7621nmyh0c40kpghgi";
        package = "packages/sexplib0/sexplib0.v0.13.0";
      };
      pname = "sexplib0";
      src = pkgs.fetchurl 
      {
        sha256 = "08g0w2gnn682c6a82d22b4yv70j7i2vgk0z5imca6nly3ddgdhj3";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/sexplib0-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ssl = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conf-libssl = selection.conf-libssl;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1g7a3znmp6w8n59qfyrmaaww7460z7cgby1syl60phs3wfk8096x";
        package = "packages/ssl/ssl.0.5.9";
      };
      pname = "ssl";
      src = pkgs.fetchurl 
      {
        sha256 = "1sk166b2rbdvrvbzc5j4nigh68nh1b04p3pbzk0wjp5gz6m6cg8z";
        url = "https://github.com/savonet/ocaml-ssl/archive/0.5.9.tar.gz";
      };
      version = "0.5.9";
    };
    stdio = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0b3xwxyifn8kg3lfp568s9n7c15mkg74p4clx169xaj16q9gnh60";
        package = "packages/stdio/stdio.v0.13.0";
      };
      pname = "stdio";
      src = pkgs.fetchurl 
      {
        sha256 = "0bb60kb027nfdh5ah76nwy0q3zcdsqydglly61kx7a12yjlcgvwm";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/stdio-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    stdlib-shims = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0l6bfv426xb77qfiv880yy8dcscb2hi5703n9dj32fa3mlxnbg42";
        package = "packages/stdlib-shims/stdlib-shims.0.1.0";
      };
      pname = "stdlib-shims";
      src = pkgs.fetchurl 
      {
        sha256 = "1jv6yb47f66239m7hsz7zzw3i48mjpbvfgpszws48apqx63wjwsk";
        url = "https://github.com/ocaml/stdlib-shims/releases/download/0.1.0/stdlib-shims-0.1.0.tbz";
      };
      version = "0.1.0";
    };
    stringext = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        qtest = selection.qtest or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:15m8a67mps6y22mm5sxpw9b0lldfcmsxim7b331d4qv3l86118gs";
        package = "packages/stringext/stringext.1.6.0";
      };
      pname = "stringext";
      src = pkgs.fetchurl 
      {
        sha256 = "1sh6nafi3i9773j5mlwwz3kxfzdjzsfqj2qibxhigawy5vazahfv";
        url = "https://github.com/rgrinberg/stringext/releases/download/1.6.0/stringext-1.6.0.tbz";
      };
      version = "1.6.0";
    };
    tls = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        cstruct-sexp = selection.cstruct-sexp;
        cstruct-unix = selection.cstruct-unix or null;
        domain-name = selection.domain-name;
        fmt = selection.fmt;
        lwt = selection.lwt or null;
        mirage-clock = selection.mirage-clock or null;
        mirage-flow = selection.mirage-flow or null;
        mirage-kv = selection.mirage-kv or null;
        nocrypto = selection.nocrypto;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        ounit = selection.ounit or null;
        ppx_cstruct = selection.ppx_cstruct;
        ppx_deriving = selection.ppx_deriving;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ptime = selection.ptime or null;
        sexplib = selection.sexplib;
        topkg = selection.topkg;
        x509 = selection.x509;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:04ana23285ccri98dy5pysqyi7h8bx48aw3559i60ziak1x6ffvx";
        package = "packages/tls/tls.0.10.6";
      };
      pname = "tls";
      src = pkgs.fetchurl 
      {
        sha256 = "1d5zdm4s17g1q2206pbk9yzga67m4j6ixryr72ahkbh89g6iz9in";
        url = "https://github.com/mirleft/ocaml-tls/releases/download/v0.10.6/tls-0.10.6.tbz";
      };
      version = "0.10.6";
    };
    topkg = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0xwbkf7mwwh10s3y2v6badjzcsjz7vzx22rc37dvfd77vgw03vdg";
        package = "packages/topkg/topkg.1.0.1";
      };
      pname = "topkg";
      src = pkgs.fetchurl 
      {
        sha256 = "18ysdrd665mhvzqp3s86kymkd1vl6qm7kakzda1h6mr4mnkawi00";
        url = "http://erratique.ch/software/topkg/releases/topkg-1.0.1.tbz";
      };
      version = "1.0.1";
    };
    tyxml = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        re = selection.re;
        seq = selection.seq;
        uutf = selection.uutf;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1q246zb57qzc8v8a2yznc069jh1rxazd8hbgjs0pgk1dgfy7m4bs";
        package = "packages/tyxml/tyxml.4.4.0";
      };
      pname = "tyxml";
      src = pkgs.fetchurl 
      {
        sha256 = "0c150h2f4c4id73ickkdqkir3jya66m6c7f5jxlp4caw9bfr8qsi";
        url = "https://github.com/ocsigen/tyxml/releases/download/4.4.0/tyxml-4.4.0.tbz";
      };
      version = "4.4.0";
    };
    tyxml-ppx = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        markup = selection.markup;
        ocaml = selection.ocaml;
        ppx_tools_versioned = selection.ppx_tools_versioned;
        tyxml = selection.tyxml;
        tyxml-syntax = selection.tyxml-syntax;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1mimh3ffmajq9gr96hmmf3xjj4agmq7mc3dkd57pa1ycskmx9xab";
        package = "packages/tyxml-ppx/tyxml-ppx.4.4.0";
      };
      pname = "tyxml-ppx";
      src = pkgs.fetchurl 
      {
        sha256 = "0c150h2f4c4id73ickkdqkir3jya66m6c7f5jxlp4caw9bfr8qsi";
        url = "https://github.com/ocsigen/tyxml/releases/download/4.4.0/tyxml-4.4.0.tbz";
      };
      version = "4.4.0";
    };
    tyxml-syntax = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_tools_versioned = selection.ppx_tools_versioned;
        re = selection.re;
        uutf = selection.uutf;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1l3xj233d2ci3kh4fpfvmx86dklxiz9xyj918310y3yb1f0iwiqb";
        package = "packages/tyxml-syntax/tyxml-syntax.4.4.0";
      };
      pname = "tyxml-syntax";
      src = pkgs.fetchurl 
      {
        sha256 = "0c150h2f4c4id73ickkdqkir3jya66m6c7f5jxlp4caw9bfr8qsi";
        url = "https://github.com/ocsigen/tyxml/releases/download/4.4.0/tyxml-4.4.0.tbz";
      };
      version = "4.4.0";
    };
    uchar = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:17sfpyj5a1z3knnjvnfa5vql6cj2x9pzgzk8w4jrvd2zii2bwpcl";
        package = "packages/uchar/uchar.0.0.2";
      };
      pname = "uchar";
      src = pkgs.fetchurl 
      {
        sha256 = "1w2saw7zanf9m9ffvz2lvcxvlm118pws2x1wym526xmydhqpyfa7";
        url = "https://github.com/ocaml/uchar/releases/download/v0.0.2/uchar-0.0.2.tbz";
      };
      version = "0.0.2";
    };
    uri = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
        re = selection.re;
        stringext = selection.stringext;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1dpyvzqbgfmd8q7lvdiyw6w9d423wbfa0whkrdc643vyzy63q8ka";
        package = "packages/uri/uri.3.1.0";
      };
      pname = "uri";
      src = pkgs.fetchurl 
      {
        sha256 = "0hxc2mshmqxz2qmjya47dzf858s6lsf3xvqswpzprkvhv0zq4ln4";
        url = "https://github.com/mirage/ocaml-uri/releases/download/v3.1.0/uri-v3.1.0.tbz";
      };
      version = "3.1.0";
    };
    uri-sexp = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib0 = selection.sexplib0;
        uri = selection.uri;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0szkmh07lp6wnxnhlggc8nqkhwsfgklb20jkfsahjnblaz44n1c1";
        package = "packages/uri-sexp/uri-sexp.3.1.0";
      };
      pname = "uri-sexp";
      src = pkgs.fetchurl 
      {
        sha256 = "0hxc2mshmqxz2qmjya47dzf858s6lsf3xvqswpzprkvhv0zq4ln4";
        url = "https://github.com/mirage/ocaml-uri/releases/download/v3.1.0/uri-v3.1.0.tbz";
      };
      version = "3.1.0";
    };
    uutf = 
    {
      opamInputs = 
      {
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
        uchar = selection.uchar;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1j4hkk196lg1dsnf6jb1n8y3na606lkfb5vlr0gjb53qc7pdh6cy";
        package = "packages/uutf/uutf.1.0.2";
      };
      pname = "uutf";
      src = pkgs.fetchurl 
      {
        sha256 = "1nx1rly3qj23jzn9yk3x6fwqimcxjd84kv5859vvhdg56psq26p6";
        url = "http://erratique.ch/software/uutf/releases/uutf-1.0.2.tbz";
      };
      version = "1.0.2";
    };
    x509 = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        asn1-combinators = selection.asn1-combinators;
        cstruct = selection.cstruct;
        cstruct-unix = selection.cstruct-unix or null;
        domain-name = selection.domain-name;
        dune = selection.dune;
        fmt = selection.fmt;
        gmap = selection.gmap;
        nocrypto = selection.nocrypto;
        ocaml = selection.ocaml;
        ptime = selection.ptime;
        rresult = selection.rresult;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0mdfkrklyh7p9ndidh3zrry6lziwwnpag5xiyw2z0k37az4zc6g9";
        package = "packages/x509/x509.0.9.0";
      };
      pname = "x509";
      src = pkgs.fetchurl 
      {
        sha256 = "15bpgsaagh6x9029kblg1lb2z3mqf6lamsh9hwpr45hvh9898b3l";
        url = "https://github.com/mirleft/ocaml-x509/releases/download/v0.9.0/x509-v0.9.0.tbz";
      };
      version = "0.9.0";
    };
    xmlm = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1sllk1bcqdbb67fcimwb9j4z8n0z1z49aqgy65vwsigzymmnjz14";
        package = "packages/xmlm/xmlm.1.3.0";
      };
      pname = "xmlm";
      src = pkgs.fetchurl 
      {
        sha256 = "1rrdxg5kh9zaqmgapy9bhdqyxbbvxxib3bdfg1vhw4rrkp1z0x8n";
        url = "http://erratique.ch/software/xmlm/releases/xmlm-1.3.0.tbz";
      };
      version = "1.3.0";
    };
    zarith = 
    {
      opamInputs = 
      {
        conf-gmp = selection.conf-gmp;
        conf-perl = selection.conf-perl;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:10y477fjig8d6chpmgdmpv683h78kshkmw3dmhi6sjid4gk6pc52";
        package = "packages/zarith/zarith.1.9.1";
      };
      pname = "zarith";
      src = pkgs.fetchurl 
      {
        sha256 = "0pfa271476dic5pvn6kxz3dfswxs6kqm2cxmhdx5xq2ayca05gj9";
        url = "https://github.com/ocaml/Zarith/archive/release-1.9.1.tar.gz";
      };
      version = "1.9.1";
    };
  };
}

