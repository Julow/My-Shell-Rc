snippet let "let _ = _ in _"
let ${1:x} = ${2:y} in
${0}
endsnippet

snippet leto "let open _ in _"
let open ${1:M} in
${0}
endsnippet

snippet struct "struct _ end"
struct
  ${0}
end
endsnippet

snippet sig "sig _ end"
sig
  ${0}
end
endsnippet

snippet object "object _ end"
object
  ${0}
end
endsnippet

snippet do "do _ end"
do
  ${0}
done
endsnippet

snippet (fun "(fun _ -> _)"
(fun ${1:_} -> ${0:_})
endsnippet

snippet fun "fun _ -> _"
fun ${1:_} ->
	${0:_}
endsnippet

snippet | "| _ -> _"
| ${1:_} -> ${0:_}
endsnippet

snippet matchopt
match ${1:${VISUAL}} with
| Some ${2:_} -> ${3:_}
| None -> ${4:_}
endsnippet

snippet pr "Printf.printf"
Printf.printf "${1}\n%!"${0};
endsnippet

snippet epr "Printf.eprintf"
Printf.eprintf "${1}\n%!"${0};
endsnippet

snippet ppf "Format.fprintf"
Format.fprintf ppf "${1}"${0};
endsnippet
